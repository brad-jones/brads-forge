on:
  push:
    branches:
      - master
  schedule:
    - cron: 28 3 * * *
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Git Checkout
        uses: actions/checkout@v4

      - name: ⚙️ Install pixi env
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v0.39.0

      - name: ⚙️ Add .pixi/envs/default/bin to the $PATH
        shell: bash
        run: |
          echo "$(pwd)/.pixi/envs/default/bin" >> $GITHUB_PATH

      - name: ⚙️ Install Deno Deps
        run: deno install

      - name: 🧑‍🍳 Generate Rattler Build Recipes
        run: deno task generate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PREFIX_TOKEN: ${{ secrets.PREFIX_TOKEN }}

      - name: ⬆️ Upload Rattler Build Recipes
        uses: actions/upload-artifact@v4
        with:
          name: recipes
          path: generated-forge/**/*

  build:
    needs: generate
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { target: linux-64, os: ubuntu-latest }
          - { target: win-64, os: windows-latest }
          # force older macos-13 to get x86_64 runners
          - { target: osx-64, os: macos-13 }
          - { target: osx-arm64, os: macos-14 }
    steps:
      - name: ⬇️ Git Checkout
        uses: actions/checkout@v4

      - name: ⬇️ Download Generated Recipes
        uses: actions/download-artifact@v4
        with:
          path: ./generated-forge

      - name: ⚙️ Install pixi env
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v0.39.0

      - name: ⚙️ Add .pixi/envs/default/bin to the $PATH
        shell: bash
        run: |
          echo "$(pwd)/.pixi/envs/default/bin" >> $GITHUB_PATH

      - name: 📦 Build Generated Recipes
        shell: bash
        run: |
          rattler-build build --recipe-dir ./generated-forge \
            --skip-existing=all --target-platform=${{ matrix.target }} \
            -c conda-forge -c https://prefix.dev/brads-forge

      - name: 🎉 Publish to prefix.dev
        shell: bash
        run: |
          for file in output/**/*.conda; do
            rattler-build upload prefix -c brads-forge "$file"
          done
